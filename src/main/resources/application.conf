# Example config file - edit to your taste.

akka {
  loglevel = INFO
  loggers  = ["cakesolutions.example.logging.Coloured"]

  log-dead-letters = off

  system = "DeltaCloudCluster"

  actor {
    debug {
      # Logging of message invocations on certain actors (using akka.event.LoggingReceive)
      receive   = on

      # Log unhandled actor messages
      unhandled = on
    }

    provider = "akka.remote.RemoteActorRefProvider"

    include file("/usr/share/cluster/config/akka-actor.conf")
  }

  cluster {
    include file("/usr/share/cluster/config/akka-cluster.conf")
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]

    include file("/usr/share/cluster/config/akka-remote.conf")
  }
}

flow {
  materializer {
    initial-fan-out-buffer-size = 1
    max-fan-out-buffer-size     = 1
    initial-input-buffer-size   = 1
    max-input-buffer-size       = 1
    dispatcher                  = ""
  }
}

client {
  materializer = ${flow.materializer}
  timeout      = 5 m    # Period to wait for a server response
  watermark    = 4
  reconnect    = 10 s   # Period between controller reconnection attempts
  speed        = 200 ms # Speed at which the fast producer generates subsequent batches of messages
}

controller {
  materializer = ${flow.materializer}
  host         = "localhost" # known address of gateway to controller (via port forwarding rules)
  port         = 8080
  update       = 1 m         #Â Period between calls to sendCurrentClusterState
  watermark    = 4
}

worker {
  die      = 4
  workload = 1 s # Period of time a worker will block for (when simulating a workload)
}

deltacloud {
  host    = "localhost"
  port    = 3001
  timeout = 5 # minutes (to wait for a server response)
  driver  = "virtualbox"

  chef {
    url = "https://api.opscode.com/organizations/web-frameworks"
    user {
      name = "carlpulley"
      pem  = "/Users/bagpuss/.chef/carlpulley.pem"
    }
    validation {
      client_name = "web-frameworks-validator"
      pem         = "/Users/bagpuss/.chef/web-frameworks-validator.pem"
    }
  }

  virtualbox {
    image    = "697083c3-1d95-455a-aa5a-e62a11c62d7b" # UUID of a Virtualbox image (trusty: 20140816)
    keyname  = "id_rsa"                               # names a .pub file in ~/.ssh
    password = "passw0rd"
    hwp      = "medium"
  }

  ec2 {
    image   = "ami-c2c604aa" # trusty: 20140712
    keyname = "aws-ec2"
    # Random password assigned by Amazon
    hwp     = "m1.small"
  }

  rackspace {
    image   = "???"
    keyname = "rackspace"
    # Random password assigned by Rackspace
    hwp     = "???"
  }
}
